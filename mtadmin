#!/bin/bash
now=$(date)
file=/var/www/html/admin.rsc
list=/etc/mtadmin.lst
secureports=22,80,443,8291
dudeservers=dude.example.com,dude2.example.com

function ip4address () {
 if [[ $1 =~ ^([0-9]{1,2}|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.([0-9]{1,2}|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.([0-9]{1,2}|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.([0-9]{1,2}|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(/([0-9]|[1-2][0-9]|3[0-2]))?$ ]]; then
  ipv4addr=$1
 else
  ipv4addr=$(dig A +short $1 | grep -v "\.$" | xargs -rn1)
 fi
}

function ip6address () {
 if [[ $1 =~ ^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?$ ]]; then
  ipv6addr=$1
 else
  ipv6addr=$(dig AAAA +short $1 | grep -v "\.$" | xargs -rn1)
 fi
}

echo "# Generated on $now
:log info \"Importing Admin Address List\"
/system logging disable 0
/ip firewall address-list" > $file

if [ $dudeservers ]; then
echo "/ip firewall address-list remove [find list=admin comment!=dude]" >> $file
 for server in $(echo $dudeservers | tr "," " "); do
  ip4address $server
  if [ $ipv4addr ]; then
   echo ":if ([:ip firewall address-list find list=admin address=$ipv4addr] = \"\") do={
 :ip firewall address-list add list=admin address=$ipv4addr comment=dude timeout=1d} else={
  :if ([:ip firewall address-list find list=admin address=$ipv4addr] != \"\") do={
   :ip firewall address-list set [:ip firewall address-list find list=admin address=$ipv4addr] timeout=1d}}" >> $file
  else  
   echo '/ip firewall address-list remove [find list=admin]' >> $file
  fi
 done
fi

while read hostlist; do
  ip4address $hostlist
  if [ $ipv4addr ]; then
  echo "/do {ip firewall address-list add list=admin address=$ipv4addr} on-error={}" >> $file
  fi
done <$list

for port in $(echo $secureports | tr "," " "); do
 echo "/ip firewall filter set [:ip firewall filter find dst-port=\"$port\"] src-address-list=admin" >> $file
done

echo ":if ([:system package find name=ipv6 disabled=yes] = \"\") do={
 /ipv6 firewall address-list" >> $file

if [ $dudeservers ]; then
 echo " /ipv6 firewall address-list remove [find list=admin comment!=dude]" >> $file
 for server in $(echo $dudeservers | tr "," " "); do
  ip6address $server
  if [ $ipv6addr ]; then
   echo " :if ([:ipv6 firewall address-list find list=admin address=$ipv6addr] = \"\") do={
  :ipv6 firewall address-list add list=admin address=$ipv6addr comment=dude timeout=1d} else={
   :if ([:ipv6 firewall address-list find list=admin address=$ipv6addr] != \"\") do={
    :ipv6 firewall address-list set [:ipv6 firewall address-list find list=admin address=$ipv6addr] timeout=1d}}" >> $file
  else
   echo ' /ipv6 firewall address-list remove [find list=admin]' >> $file
  fi
 done
fi

while read hostlist; do
 ip6address $hostlist
 if [ $ipv6addr ]; then
  echo " /do {ipv6 firewall address-list add list=admin address=$ipv6addr} on-error={}" >> $file
 fi
done <$list

for port in $(echo $secureports | tr "," " "); do
 echo " /ipv6 firewall filter set [:ipv6 firewall filter find dst-port=\"$port\"] src-address-list=admin" >> $file
done

echo '}' >> $file

echo '/system logging enable 0
:log info "Admin Address List Import Complete"
' >> $file
